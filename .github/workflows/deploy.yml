# test: trigger GitHub Actions
name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'
          channel: 'stable'
          
      - name: Get dependencies
        run: flutter pub get
        
      - name: Build web
        run: flutter build web --base-href=/mixgame/ --release
        
      - name: Update version information and cache busters
        run: |
          # 현재 타임스탬프를 가져와서 버전으로 사용
          VERSION=$(date +%Y%m%d%H%M%S)
          echo "Using version: $VERSION"
          
          # index.html 파일의 서비스 워커 버전 업데이트
          sed -i 's/const serviceWorkerVersion = ""\([0-9]*\)""/const serviceWorkerVersion = ""'$VERSION'""/' build/web/index.html
          
          # 메타 태그 추가하여 캐시 무효화
          sed -i 's/<meta charset="UTF-8">/<meta charset="UTF-8">\n  <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate">\n  <meta http-equiv="Pragma" content="no-cache">\n  <meta http-equiv="Expires" content="0">/' build/web/index.html
          
          echo "Updated version in files to $VERSION"
          
      - name: Create clean directory for deployment
        run: |
          mkdir -p gh-pages-deploy
          cp -r build/web/* gh-pages-deploy/
          cd gh-pages-deploy
          rm -rf linux windows
          rm -f .flutter-plugins .flutter-plugins-dependencies
          touch .nojekyll
          
      - name: Setup Pages
        uses: actions/configure-pages@v3
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'gh-pages-deploy'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 