# test: trigger GitHub Actions
name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# 캐시를 비우기 위해 항상 실행되도록 설정
concurrency:
  group: "pages-${{ github.run_id }}"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # 전체 히스토리 가져오기
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'
          channel: 'stable'

      - name: Clean Flutter
        run: flutter clean
        
      - name: Get dependencies
        run: flutter pub get
        
      - name: Build web with unique timestamp
        run: |
          # 배포 시마다 고유한 타임스탬프 생성
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          echo "Build timestamp: $TIMESTAMP"
          
          # 타임스탬프를 환경 변수로 저장
          echo "BUILD_TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV
          
          # 빌드 플래그에 타임스탬프 추가
          flutter build web --base-href=/mixgame/ --release --dart-define=BUILD_TIMESTAMP=$TIMESTAMP
        
      - name: Update version information and cache busters
        run: |
          # index.html 파일 수정
          sed -i 's/<head>/<head>\n  <!-- Build timestamp: ${{ env.BUILD_TIMESTAMP }} -->\n  <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate">\n  <meta http-equiv="Pragma" content="no-cache">\n  <meta http-equiv="Expires" content="0">/' build/web/index.html
          
          # main.dart.js에 타임스탬프 쿼리 파라미터 추가
          sed -i 's/<script src="main.dart.js"/<script src="main.dart.js?v=${{ env.BUILD_TIMESTAMP }}"/' build/web/index.html
          
          echo "Updated files with timestamp: ${{ env.BUILD_TIMESTAMP }}"
          
      - name: Create clean directory for deployment
        run: |
          mkdir -p gh-pages-deploy
          cp -r build/web/* gh-pages-deploy/
          
          # 중요: 깨끗한 .nojekyll 파일 생성
          cd gh-pages-deploy
          rm -rf linux windows
          rm -f .flutter-plugins .flutter-plugins-dependencies
          touch .nojekyll
          
          # 추가 디버깅용 마커 파일 생성
          echo "Build timestamp: ${{ env.BUILD_TIMESTAMP }}" > build_info.txt
          
          # 캐시를 무효화하는 특별한 파일 추가
          echo "{\"version\": \"${{ env.BUILD_TIMESTAMP }}\", \"date\": \"$(date)\", \"force_refresh\": true}" > version.json
          
      - name: Setup Pages
        uses: actions/configure-pages@v3
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'gh-pages-deploy'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          timeout: 600000 # 타임아웃 증가 (10분) 